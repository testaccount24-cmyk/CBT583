//jobcard
//*
//JOBLIB   DD DSN=IGY.V1R2M0.SIGYCOMP,DISP=SHR  <-LE COBOL
//*
//  SET LMEMBER=PROFSET
//  SET LKLIB='loadlib'
//*
//COBOL    EXEC PGM=IGYCRCTL,
// PARM=(RENT,DYN,OFFSET,NOSEQ,QUOTE,NOADV,SOURCE,MAP,XREF)
//*
//SYSPRINT DD SYSOUT=*
//SYSTERM  DD SYSOUT=*
//SYSUT1   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSUT2   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSUT3   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSUT4   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSUT5   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSUT6   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSUT7   DD UNIT=SYSDA,SPACE=(TRK,(15,10))
//SYSLIN   DD DSN=&OBJ,DISP=(NEW,PASS,DELETE),
//            UNIT=SYSDA,SPACE=(TRK,(45,15),RLSE),
//            LRECL=80,RECFM=FB,DSORG=PS
//SYSIN    DD *
000100* -------------------------------------------------------------- *
000200* Compile Options to use:                                        *
000300*                                                                *
000400* PARM=(RENT,DYN,OFFSET,NOSEQ,QUOTE,NOADV,SOURCE,MAP,XREF)       *
000500*                                                                *
000600* Link-Edit Options to use:                                      *
000700*                                                                *
000800* PARM=(LET,LIST,MAP,XREF,RENT)                                  *
000900*                                                                *
001000* -------------------------------------------------------------- *
001100 Identification Division.
001200 Program-ID. PROFSET.
001300 Author. Jim Moore - Concentrated Logic Incorporated.
001400*--Remarks.------------------------------------------------------*
001500*                                                                *
001600* Use COBOL for OS/390 V1R2 or higher compiler. If COBOL II,     *
001700* try compiling it and changing things that flag as errors.      *
001800* You will probably have to revert quotes to aposts, add back    *
001900* the nonsense word "FILLER" and maybe a few more things.        *
001910*                                                                *
001920* This program is an "Initial Edit Macro" written in COBOL. It   *
001930* examines 80-byte data (and only 80-byte data) to determine     *
001940* how to set the edit profile. Here is the order and strings     *
001950* that it looks at to determine the profile setting:             *
001960*                                                                *
001970* 1) Assembler ("ASM")      CSECT/DSECT between 1-16 MACRO 9-15  *
001980* 2) JCL ("CNTL")           "//" in column 1-2                   *
001990* 3) COBOL ("COBOL")        "WORKING-STORAGE in Col 8 or "PIC"   *
001991* 4) REXX ("REXX")          "/* REXX" on 1st line                *
001992* 5) Panels ("PANEL")       ")ATTR or )BODY" in Col 1            *
001993* 6) Skeletons ("SKELETON") ")IM, )SEL or )CM" in Col 1          *
001994* 7) CLIST ("CLIST")        "PROC" in Col 1                      *
002000*----------------------------------------------------------------*
002100 Environment Division.
002200 Data Division.
002300 Working-Storage Section.
002400 01  Misc-Fields.
002500     05  Dot-Position        Pic S9(08) Binary.
002600     05  ZD-Lrecl            Pic  9(05).
002700/
002800*----------------------------------------------------------------*
002900* The first and last character of each of the Value clause       *
003000* literals in "Free-Form-ISPLINK-Syntax" must be a US cent-sign. *
003100* This character isn't in the standard ASCII character set. If   *
003200* "unprintable characters" appear in these literals, change them *
003300* all by taking the following steps:                             *
003400*                                                                *
003500* 1) Exclude the entire range of lines under the "01 Level"      *
003600*    Use XX/XX line commands to do this.                         *
003700* 2) Issue Command ===> C ALL P'.' X'4A' X                       *
003800*    Read as: Change all "unprintable characters" to a X'4A'     *
003900*    but only on excluded lines                                  *
004000* 3) A X'4A' is the EBCDIC bit pattern for a US cent-sign.       *
004100*                                                                *
004200*----------------------------------------------------------------*
004300 01  Free-Form-ISPLINK-Syntax.
004400     05  Macro-Declare       Pic  X(07)
004500         Value "óMACROó".
004600     05  Macro-End           Pic  X(06)
004700         Value "óMENDó".
004800     05  Bounds-Default      Pic  X(08)
004900         Value "óBOUNDSó".
005000     05  Get-Member          Pic  X(21)
005100         Value "ó(DSNMEMBR) = MEMBERó".
005200     05  Get-Imacname        Pic  X(21)
005300         Value "ó(IMACNAME) = IMACROó".
005400     05  Get-Lrecl           Pic  X(20)
005500         Value "ó(DSNAMLRC) = LRECLó".
005600     05  Get-DSName          Pic  X(22)
005700         Value "ó(DATASETN) = DATASETó".
005800     05  Set-COBOL-Profile   Pic  X(15)
005900         Value "óPROFILE COBOLó".
006000     05  Set-ASM-Profile     Pic  X(13)
006100         Value "óPROFILE ASMó".
006200     05  Set-CNTL-Profile    Pic  X(14)
006300         Value "óPROFILE CNTLó".
006400     05  Set-REXX-Profile    Pic  X(14)
006500         Value "óPROFILE REXXó".
006600     05  Set-Skel-Profile    Pic  X(18)
006700         Value "óPROFILE SKELETONó".
006800     05  Set-Panel-Profile   Pic  X(15)
006900         Value "óPROFILE PANELó".
007000     05  Set-CLIST-Profile   Pic  X(16)
007100         Value "óPROFILE CLISTó".
007200     05  Set-DATA-Profile.
007300         10                  Pic  X(09)
007400         Value "óPROFILE ".
007500         10  Data-Profname   Pic  X(09)
007600         Value Spaces.
007700     05  Set-COBOL-Numbering Pic  X(18)
007800         Value "óNUM ON COBOL STDó".
007900     05  Set-STD-Numbering   Pic  X(12)
008000         Value "óNUM ON STDó".
008100     05  Set-No-Numbering    Pic  X(09)
008200         Value "óNUM OFFó".
008300     05  Set-CAPS-Off        Pic  X(10)
008400         Value "óCAPS OFFó".
008500     05  Set-CAPS-On         Pic  X(09)
008600         Value "óCAPS ONó".
008700     05  Set-Profile-Unlock  Pic  X(16)
008800         Value "óPROFILE UNLOCKó".
008900     05  Find-1st-Char       Pic  X(17)
009000         Value "óFIND P'=' FIRSTó".
009100     05  Set-Recovery-On     Pic  X(13)
009200         Value "óRECOVERY ONó".
009300     05  Set-Nulls-On        Pic  X(14)
009400         Value "óNULLS ON STDó".
009500     05  Set-Stats-On        Pic  X(10)
009600         Value "óSTATS ONó".
009700     05  Reset-All           Pic  X(07)
009800         Value "óRESETó".
009900     05  Seek-COBOL-01       Pic  X(32)
010000         Value "óSEEK FIRST 'WORKING-STORAGE' 8ó".
010100     05  Seek-COBOL-02       Pic  X(20)
010200         Value "óSEEK FIRST ' PIC 'ó".
010300     05  Seek-JCL-01         Pic  X(21)
010400         Value "óSEEK FIRST '//' 1 2ó".
010500     05  Seek-ASM-01         Pic  X(25)
010600         Value "óSEEK FIRST 'CSECT' 1 16ó".
010700     05  Seek-ASM-02         Pic  X(25)
010800         Value "óSEEK FIRST 'DSECT' 1 16ó".
010900     05  Seek-ASM-03         Pic  X(27)
011000         Value "óSEEK FIRST ' MACRO ' 9 15ó".
011100     05  Seek-REXX-01        Pic  X(18)
011200         Value "óSEEK FIRST '/* 'ó".
011300     05  Seek-REXX-02        Pic  X(18)
011400         Value "óSEEK NEXT 'REXX'ó".
011500     05  Seek-Panel-01       Pic  X(22)
011600         Value "óSEEK FIRST ')ATTR' 1ó".
011700     05  Seek-Panel-02       Pic  X(22)
011800         Value "óSEEK FIRST ')BODY' 1ó".
011900     05  Seek-Skel-01        Pic  X(21)
012000         Value "óSEEK FIRST ')IM ' 1ó".
012100     05  Seek-Skel-02        Pic  X(22)
012200         Value "óSEEK FIRST ')SEL ' 1ó".
012300     05  Seek-Skel-03        Pic  X(21)
012400         Value "óSEEK FIRST ')CM ' 1ó".
012500     05  Seek-CLIST-01       Pic  X(22)
012600         Value "óSEEK FIRST 'PROC ' 1ó".
012700     05  A-Cent-Sign         Pic  X(01)
012800         Value "ó".
012900 01  Edit-Macro-Parameters.
013000     05  Buf-Len             Pic S9(08) Binary.
013100     05  Null-Len            Pic S9(08) Binary Value +0.
013200 01  ISPF-API-Services.
013300     05  ISREdit             Pic  X(08) Value "ISREDIT".
013400     05  Vdefine             Pic  X(08) Value "VDEFINE".
013500     05  SetMsg              Pic  X(08) Value "SETMSG".
013600 01  ISPF-API-Parameters.
013700     05  Fixd                Pic  X(08) Value "FIXED".
013800     05  Char                Pic  X(08) Value "CHAR".
013900     05  ISPZ000             Pic  X(08) Value "ISPZ000".
014000     05  ISPLINK             Pic  X(08) Value "ISPLINK".
014100 01  Vdefine-Literals.
014200     05  DSN-L4-Fx           Pic  X(16)
014300         Value "(DSNAMLRC,E1,E2)".
014400     05  DSN-Name            Pic  X(10)
014500         Value "(DATASETN)".
014600     05  DSN-L8-Flds         Pic  X(37)
014700         Value "(DSNMEMBR,IMACNAME,PROFNAME,DYNDPROF)".
014800     05  ShortMsg            Pic  X(10)
014900         Value "(ZMSG000S)".
015000     05  LongMsg             Pic  X(10)
015100         Value "(ZMSG000L)".
015200 01  Function-Pool.
015300     05  BIN-FLD.
015400         10  DSNAMLRC        Pic S9(08) Binary.
015500         10  SEEK-Count1     Pic S9(08) Binary.
015600         10  SEEK-Count2     Pic S9(08) Binary.
015700     05  DATASETN            Pic  X(44) Value Spaces.
015800     05  ZMSG000S            Pic  X(24) Value Spaces.
015900     05  ZMSG000L            Pic  X(76) Value Spaces.
016000     05  FP-L8                          Value Spaces.
016100         10  DSNMEMBR        Pic  X(08).
016200         10  IMACNAME        Pic  X(08).
016300         10  PROFNAME        Pic  X(08).
016400         10  DYNDPROF        Pic  X(08).
016410             88  Data-Is-ASM            Value "ASM     ".
016420             88  Data-Is-JCL            Value "CNTL    ".
016500             88  Data-Is-COBOL          Value "COBOL   ".
016700             88  Data-Is-REXX           Value "REXX    ".
017100             88  Data-Is-PANEL          Value "PANEL   ".
017200             88  Data-Is-SKELETON       Value "SKELETON".
017210             88  Data-Is-CLIST          Value "CLIST   ".
017300 01  ProfChg-Long.
017400     05                      Pic  X(26)
017500         Value "Profile adjusted based on ".
017600     05                      Pic  X(23)
017700         Value "data content. Default: ".
017800     05  OldProf             Pic  X(09).
017900     05                      Pic  X(09)
018000         Value "Altered: ".
018100     05  NewProf             Pic  X(08).
018200 Linkage Section.
018300 01  Passed-Linkage.
018400     05  Parm-Debug          Pic  X(08).
018500*----------------------------------------------------------------*
018600* Only data with LRECL=80 is scanned to determine the type. Any  *
018700* other LRECL will cause a profile name of "DATAnnnn" to be used *
018800* The "nnnn" will be the 4 low-order positions of the LRECL.     *
018900*----------------------------------------------------------------*
019000/
019100 Procedure Division Using Passed-Linkage.
019200     Perform 0001-Initialize                     Thru 0001-Exit.
019300
019400     If DSNAMLRC = 80
019500        Perform 0100-Scan-Data-For-Profile       Thru 0100-Exit.
019600
019700*----------------------------------------------------------------*
019800* The following "If" statement sets an ISPF message if the logic *
019900* determines that the Dynamically Determined Profile             *
020000* ("DYNDPROF") differs from the Low-Level Qualifier of the       *
020100* DSN being edited. If the message is undesirable, comment out.  *
020200*----------------------------------------------------------------*
020300     If  DYNDPROF Not = Spaces
020400     And DYNDPROF Not = PROFNAME
020500        Move "Edit Profile Switched" To ZMSG000S
020600        Move DYNDPROF                To NewProf
020700        Move PROFNAME                To OldProf
020800        Move ProfChg-Long            To ZMSG000L
020900        Call ISPLINK Using SetMsg ISPZ000.
021000
021100*----------------------------------------------------------------*
021200* The following group of edit macro calls establish Jim Moore's  *
021300* favorite edit profile settings. Note that they are always      *
021400* executed. Here's what they do:                                 *
021500*                                                                *
021600*  o The profile is set to UNLOCK.                               *
021700*  o Bounds are set to "1" and the LRECL.                        *
021800*  o RECOVERY ON set.                                            *
021900*  o NULLS ON STD set.                                           *
022000*  o All ISPF Edit messages are RESET.                           *
022100*  o If the DSN being edited is a PDS, STATS ON set.             *
022200*                                                                *
022300* Note also that the data is repositioned by FIND P'=' FIRST,    *
022400* a MEND (Macro End) is issued and Reg 15 (Return-Code) is       *
022500* primed with a "1". This causes the cursor to be positioned in  *
022600* the Command ===> line.                                         *
022700*                                                                *
022800*----------------------------------------------------------------*
022900     Call ISPLINK Using ISREdit Null-Len Set-Profile-Unlock.
023000     Call ISPLINK Using ISREdit Null-Len Bounds-Default.
023100     Call ISPLINK Using ISREdit Null-Len Find-1st-Char.
023200     Call ISPLINK Using ISREdit Null-Len Set-Recovery-On.
023300     Call ISPLINK Using ISREdit Null-Len Set-Nulls-On.
023400     Call ISPLINK Using ISREdit Null-Len Reset-All.
023500     If DSNMEMBR Not = Spaces
023600        Call ISPLINK Using ISREdit Null-Len Set-Stats-On.
023700
023800     Call ISPLINK Using ISREdit Null-Len Macro-End.
023900
024000     Move 1 To Return-Code.
024100     Goback.
024200/
024300 0001-Initialize.
024400     Move Length Of DSNAMLRC To Buf-Len.
024500     Call ISPLINK Using Vdefine DSN-L4-Fx BIN-FLD Fixd Buf-Len.
024600     Move Length Of DSNMEMBR To Buf-Len.
024700     Call ISPLINK Using Vdefine DSN-L8-Flds FP-L8 Char Buf-Len.
024800     Move Length Of DATASETN To Buf-Len.
024900     Call ISPLINK Using Vdefine DSN-Name DATASETN Char Buf-Len.
025000     Move Length Of ZMSG000S To Buf-Len.
025100     Call ISPLINK Using Vdefine ShortMsg ZMSG000S Char Buf-Len.
025200     Move Length Of ZMSG000L To Buf-Len.
025300     Call ISPLINK Using Vdefine LongMsg ZMSG000L Char Buf-Len.
025400     Call ISPLINK Using ISREdit Null-Len Macro-Declare.
025500     Call ISPLINK Using ISREdit Null-Len Get-Member.
025600     Call ISPLINK Using ISREdit Null-Len Get-Imacname.
025700     Call ISPLINK Using ISREdit Null-Len Get-Lrecl.
025800     Call ISPLINK Using ISREdit Null-Len Get-DSName.
025900     Move Zeros     To Dot-Position.
026000
026100     Perform Varying Tally From 1 By 1
026200     Until DATASETN (Tally:1) = Space
026300     Or Tally > Length Of DATASETN
026400         If DATASETN (Tally:1) = "."
026500            Move Tally To Dot-Position
026600         End-If
026700     End-Perform.
026800
026900     If Dot-Position > Zeros
027000        Move DATASETN (Dot-Position + 1:Tally - Dot-Position)
027100        To   PROFNAME
027200     Else
027300     Move DATASETN (1:Tally) To PROFNAME.
027400
027500     If DSNAMLRC Not = 80
027600        Move DSNAMLRC         To ZD-Lrecl
027700        Move "DATA"           To DYNDPROF
027800        Evaluate True
027900           When DSNAMLRC > 9999
028000              Move ZD-Lrecl       To DYNDPROF (4:)
028100           When Other
028200              Move ZD-Lrecl (2:4) To DYNDPROF (5:)
028300        End-Evaluate
028400        Move DYNDPROF  To Data-Profname
028500        Inspect Data-Profname
028600                Replacing First Space By A-Cent-Sign
028700        Call ISPLINK Using ISREdit Null-Len Set-DATA-Profile.
028800 0001-Exit. Exit.
028900
029000 0100-Scan-Data-For-Profile.
029100     Perform 1200-Check-ASM                      Thru 1200-Exit.
029200
029300     If Data-Is-ASM
029400       Call ISPLINK Using ISREdit Null-Len Set-ASM-Profile
029500       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering
029600       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off
029700     Else
029800     Perform 1100-Check-JCL                      Thru 1100-Exit
029900     If Data-Is-JCL
030000       Call ISPLINK Using ISREdit Null-Len Set-CNTL-Profile
030100       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering
030200       Call ISPLINK Using ISREdit Null-Len Set-CAPS-On
030300     Else
030400     Perform 1000-Check-COBOL                    Thru 1000-Exit
030500     If Data-Is-COBOL
030600       Call ISPLINK Using ISREdit Null-Len Set-COBOL-Profile
030700       Call ISPLINK Using ISREdit Null-Len Set-COBOL-Numbering
030800       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off
030900     Else
031000     Perform 1300-Check-REXX                     Thru 1300-Exit
031100     If Data-Is-REXX
031200       Call ISPLINK Using ISREdit Null-Len Set-REXX-Profile
031300       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering
031400       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off
031500     Else
031600     Perform 1400-Check-Panels                   Thru 1400-Exit
031700     If Data-Is-PANEL
031800       Call ISPLINK Using ISREdit Null-Len Set-Panel-Profile
031900       Call ISPLINK Using ISREdit Null-Len Set-No-Numbering
032000       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off
032100     Else
032200     Perform 1500-Check-Skeleton                 Thru 1500-Exit
032300     If Data-Is-SKELETON
032400       Call ISPLINK Using ISREdit Null-Len Set-Skel-Profile
032500       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering
032600       Call ISPLINK Using ISREdit Null-Len Set-CAPS-On
032700     Else
032800     Perform 1600-Check-CLIST                    Thru 1600-Exit
032900     If Data-Is-CLIST
033000       Call ISPLINK Using ISREdit Null-Len Set-CLIST-Profile
033100       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering
033200       Call ISPLINK Using ISREdit Null-Len Set-CAPS-On.
033300 0100-Exit. Exit.
033400/
033500 1000-Check-COBOL.
033600     Call ISPLINK Using ISREdit Null-Len Seek-COBOL-01.
033700
033800     If Return-Code > Zero
033900        Call ISPLINK Using ISREdit Null-Len Seek-COBOL-02
034000        If Return-Code > Zero
034100           Next Sentence
034200        Else
034300        Move "COBOL"  To DYNDPROF
034400     Else
034500     Move "COBOL"  To DYNDPROF.
034600 1000-Exit. Exit.
034700/
034800 1100-Check-JCL.
034900     Call ISPLINK Using ISREdit Null-Len Seek-JCL-01.
035000
035100     If Return-Code > Zero
035200        Next Sentence
035300     Else
035400     Move "CNTL"   To DYNDPROF.
035500 1100-Exit. Exit.
035600/
035700 1200-Check-ASM.
035800     Call ISPLINK Using ISREdit Null-Len Seek-ASM-01.
035900
036000     If Return-Code > Zero
036100        Call ISPLINK Using ISREdit Null-Len Seek-ASM-02
036200        If Return-Code > Zero
036300           Call ISPLINK Using ISREdit Null-Len Seek-ASM-03
036400           If Return-Code > Zero
036500              Next Sentence
036600           Else
036700           Move "ASM"    To DYNDPROF
036800        Else
036900        Move "ASM"    To DYNDPROF
037000     Else
037100     Move "ASM"    To DYNDPROF.
037200 1200-Exit. Exit.
037300/
037400 1300-Check-REXX.
037500     Call ISPLINK Using ISREdit Null-Len Seek-REXX-01.
037600
037700     If Return-Code > Zero
037800        Next Sentence
037900     Else
038000     Call ISPLINK Using ISREdit Null-Len Seek-REXX-02
038100     If Return-Code > Zero
038200        Next Sentence
038300     Else
038400     Move "REXX"   To DYNDPROF.
038500 1300-Exit. Exit.
038600/
038700 1400-Check-Panels.
038800     Call ISPLINK Using ISREdit Null-Len Seek-Panel-01.
038900
039000     If Return-Code > Zero
039100       Call ISPLINK Using ISREdit Null-Len Seek-Panel-02
039200       If Return-Code > Zero
039300          Next Sentence
039400       Else
039500       Move "PANEL" To DYNDPROF
039600     Else
039700     Move "PANEL" To DYNDPROF.
039800 1400-Exit. Exit.
039900/
040000 1500-Check-Skeleton.
040100     Call ISPLINK Using ISREdit Null-Len Seek-Skel-01.
040200
040300     If Return-Code > Zero
040400       Call ISPLINK Using ISREdit Null-Len Seek-Skel-02
040500       If Return-Code > Zero
040600          Call ISPLINK Using ISREdit Null-Len Seek-Skel-03
040700          If Return-Code > Zero
040800            Next Sentence
040900          Else
041000          Move "SKELETON" To DYNDPROF
041100       Else
041200       Move "SKELETON"    To DYNDPROF
041300     Else
041400     Move "SKELETON"      To DYNDPROF.
041500 1500-Exit. Exit.
041600/
041700 1600-Check-CLIST.
041800     Call ISPLINK Using ISREdit Null-Len Seek-CLIST-01.
041900
042000     If Return-Code > Zero
042100       Next Sentence
042200     Else
042300     Move "CLIST"         To DYNDPROF.
042400 1600-Exit. Exit.
//*
// IF RC LE 4 THEN
//LINK EXEC PGM=IEWL,PARM=(LET,LIST,MAP,XREF,RENT)
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSLMOD  DD DSN=&LKLIB(&LMEMBER),DISP=SHR
//SYSLIB   DD DSN=CEE.SCEELKED,DISP=SHR
//         DD DSN=&LKLIB,DISP=SHR
//SYSLIN   DD DSN=&OBJ,DISP=(OLD,DELETE)
// ENDIF
